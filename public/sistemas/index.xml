<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sistemas on Blog</title>
    <link>https://franjavimn.onrender.com/sistemas/</link>
    <description>Recent content in Sistemas on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <copyright>Francisco Javier Martín Núñez</copyright>
    <lastBuildDate>Fri, 30 Oct 2020 13:21:46 +0100</lastBuildDate><atom:link href="https://franjavimn.onrender.com/sistemas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vpn Openstack</title>
      <link>https://franjavimn.onrender.com/sistemas/vpn-openstack/</link>
      <pubDate>Fri, 30 Oct 2020 13:21:46 +0100</pubDate>
      
      <guid>https://franjavimn.onrender.com/sistemas/vpn-openstack/</guid>
      <description>Configuración de cliente OpenVPN con certificados X.509 En este caso vamos a configurar una VPN con el cliente OpenVPN para poder conectarnos a la maquina virtual sputnik.gonzalonazareno.org, los pasos a seguir son los siguientes:
 Disponer de un certificado x509 para nuestro equipo firmado por la CA Gonzalo Nazareno Configurar OpenVPN para que se conecte a sputnik.  Creacion de clave privada y solicitud de firma. Lo primero que vamos a crear va a ser una clave privada con la herramienta openssl, en este caso una clave privada RSA de 4096 bits.</description>
    </item>
    
    <item>
      <title>Compilacion Programa</title>
      <link>https://franjavimn.onrender.com/sistemas/compilacion-programa/</link>
      <pubDate>Sun, 25 Oct 2020 12:23:58 +0100</pubDate>
      
      <guid>https://franjavimn.onrender.com/sistemas/compilacion-programa/</guid>
      <description>Compilación de un programa en C utilizando un Makefile En la siguiente tarea vamos a realizar la compilacion de un programa en c usando la herramienta make, para ello vamos a usar dos programas para hacer la compilacion: htop y nano
Compilando el programa nano Primero vamos a proceder a la compilacion del programa nano, nano es un editor de texto fácil de usar. Nano trata de emular la funcionalidad y la interfaz de fácil manejo de Pico, pero sin la integración con Pine.</description>
    </item>
    
    <item>
      <title>Script Paquetes</title>
      <link>https://franjavimn.onrender.com/sistemas/script-paquetes/</link>
      <pubDate>Sun, 18 Oct 2020 14:44:56 +0200</pubDate>
      
      <guid>https://franjavimn.onrender.com/sistemas/script-paquetes/</guid>
      <description>Script para seleccionar paquetes por repositorio Tenemos que realizar un script que introduciéndolo como parámetro el nombre de un repositorio, muestre como salida los paquetes de ese repositorio que están instalados en la máquina. Los repositorios pueden ser introducidos de dos formas distintas:
 ./script.sh security.debian.org  o bien
 ./script.sh http://security.debian.org  Script para la selección de paquetes He realizado el siguiente script el cual tambien podemos encontrar em el siguiente enlace:</description>
    </item>
    
    <item>
      <title>Dpkg Apt</title>
      <link>https://franjavimn.onrender.com/sistemas/dpkg-apt/</link>
      <pubDate>Mon, 05 Oct 2020 18:13:34 +0200</pubDate>
      
      <guid>https://franjavimn.onrender.com/sistemas/dpkg-apt/</guid>
      <description>Ejercicios de dpkg y APT En primer lugar prepara una máquina virtual con Debian buster, puedes hacerlo de la forma que prefieras o usando el fichero Vagrantfile que se proporciona.
La versión de debian buster a fecha de hoy, es la versión 10.6. Sobre una máquina de versión anterior realizar las siguientes acciones:
Trabajo con apt, aptitude, dpkg  ¿Qué acciones consigo al realizar apt update y apt upgrade? Explica detalladamente.</description>
    </item>
    
  </channel>
</rss>
